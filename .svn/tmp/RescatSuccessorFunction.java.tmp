
//~--- non-JDK imports --------------------------------------------------------


import aima.search.framework.Successor;
import aima.search.framework.SuccessorFunction;

//~--- JDK imports ------------------------------------------------------------

import java.util.ArrayList;
import java.util.List;
import java.util.LinkedList;

/**
 * @author Ravi Mohan
 *
 */

public class RescatSuccessorFunction implements SuccessorFunction {
    public List getSuccessors(Object aState) {
        ArrayList                retVal = new ArrayList();
        RescatBoard             board  = (RescatBoard) aState;
        RescatHeuristicFunction RHF  = new RescatHeuristicFunction();

           LinkedList<LinkedList<Integer>> [] sortides = board.getsortides();

/*
        // No permitimos intercambiar la primera ciudad
        for (int i = 0; i < board.getNCities(); i++) {
            for (int j = i + 1; j < board.getNCities(); j++) {
               RescatBoard newBoard = new RescatBoard(board.getNCities(), board.getPath(), board.getDists());

                newBoard.swapCities(i, j);

                double    v = TSPHF.getHeuristicValue(newBoard);
                String S = new String(RescatBoard.INTERCAMBIO + " " + i + " " + j + " Coste(" + v + ") ---> "
                                      + newBoard.toString());

                retVal.add(new Successor(S, newBoard));
            }
        }
*/
        return retVal;
    }

    public RescatBoard getSuccessors1(RescatBoard rb){
        
        return rb;
    }
}


//~ Formatted by Jindent --- http://www.jindent.com
